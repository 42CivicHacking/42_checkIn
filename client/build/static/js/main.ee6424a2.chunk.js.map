{"version":3,"sources":["components/LandingPage.js","components/Checkbox.js","components/SubmitPage.js","App.js","reportWebVitals.js","index.js"],"names":["LandingPage","getUserData","a","axios","get","response","userId","data","window","location","href","console","log","document","cookie","useEffect","token","key","cookieKey","result","cookieArr","split","i","length","substring","indexOf","slice","getCookieValue","className","onClick","Checkbox","props","name","text","checkStatus","setCheckStatus","type","checked","onChange","SERVER_URL","CheckInPage","useState","setUserId","isEnter","checkAll","setCheckAll","cardNum","setCardNum","readySubmit","setReadySubmit","handleCheckIn","post","handleCheckOut","reverse","JSON","stringify","id","e","isChecked","target","map","checkList","value","App","path","exact","component","SubmitPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ee6424a2.chunk.js","sourcesContent":["import axios from 'axios';\nimport { useEffect } from 'react';\nimport '../styles/LandingPage.css';\n\n// cookie에  w_auth 있는지 확인\n// 없으면 로그인 버튼 뜨게\n// 있으면 /user/auth => valid check  => 401 : 다시 로그인버튼 / /submit으로\nfunction LandingPage () {\n\tconst getCookieValue = (key) => {\n\t\tlet cookieKey = key + \"=\";\n\t\tlet result = \"\";\n\t\tconst temp = \"_ga=GA1.2.325595084.1553693343; tz=Asia%2FSeoul; w_auth=123; _octo=GH1.1.1561395261.1616810774\";\n\t\t// const cookieArr = document.cookie.split(\";\");\n\t\tconst cookieArr = temp.split(';');\n\n\t\tfor(let i = 0; i < cookieArr.length; i++) {\n\t\t  if(cookieArr[i][0] === \" \")\n\t\t\tcookieArr[i] = cookieArr[i].substring(1);\n\t\t  if(cookieArr[i].indexOf(cookieKey) === 0) {\n\t\t\tresult = cookieArr[i].slice(cookieKey.length, cookieArr[i].length);\n\t\t\treturn result;\n\t\t  }\n\t\t}\n\t\treturn result;\n\t}\n\n\tconst getUserData = async() => {\n\t\ttry {\n\t\t\tconst response = await axios.get('/api/user/status');\n\t\t\t// console.log('user status: {card info}', response.data);\n\t\t\tconst userId = response.data['userId'];\n\t\t\tconst cardNum = response.data['card'];\n\t\t\t// const userId='juhlee';\n\t\t\twindow.location.href = `/submit/${userId}`;\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tdocument.cookie = 'w_auth=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tconst token = getCookieValue('w_auth');\n\t\tconsole.log('token: ',token);\n\t\tif (token !== '')\n\t\t\tgetUserData();\n\t})\n\n\tconst handleLogin = () => {\n\t\twindow.location.href = '/api/user/login';\n\t  };\n\treturn (\n\t\t<div className=\"btn-wrapper\">\n\t\t<div className=\"btn\" onClick={handleLogin}>42 CheckIn</div>\n\t\t</div>\n\t)\n\n};\n\nexport default LandingPage;\n","import '../styles/Checkbox.css';\n\nfunction Checkbox (props) {\n\tconst {name, text, checkStatus, setCheckStatus} = props;\n\n\tconst handleChange = () => {\n\t\tconst checked = checkStatus[name];\n\t\tsetCheckStatus([\n\t\t\t...checkStatus.slice(0,name),\n\t\t\t!checked,\n\t\t\t...checkStatus.slice(name+1)\n\t\t])\n\t}\n\treturn (\n\t\t<div>\n\t\t<input className=\"checkbox\" type=\"checkbox\" checked={checkStatus[name]} onChange={handleChange} />{text}\n\t\t</div>\n\t)\n};\nexport default Checkbox;\n","import {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport Checkbox from './Checkbox';\nimport '../styles/SubmitPage.css'\n\nconst SERVER_URL = 'http://13.209.202.141';\n\n// card valid check -> server에\n\nfunction CheckInPage (props) {\n\tconst checkLists = [\n\t\t'발열 체크시 37.5도 이하인 것을 확인했습니다.',\n\t\t'이 임시 출입카드를 분실 시 분실 비용이 발생하는 것을 확인했습니다.',\n\t\t'마스크를 반드시 상시 착용하고 방역수칙을 준수할 것을 약속하며, 모든 설문을 이상없이 작성했음을 확인합니다.'\n\t];\n\n\tconst [userId, setUserId] = useState('');\n\t// const [cardList, setCardList] = useState([]);\n\tconst [isEnter, setIsEnter] = useState(false);\n\tconst [checkAll, setCheckAll] = useState(false);\n\tconst [checkStatus, setCheckStatus] = useState([false, false, false]);\n\tconst [cardNum, setCardNum] = useState('');\n\tconst [readySubmit, setReadySubmit] = useState(false);\n\n\t// const fetchCardData = async () => {\n\t// \ttry {\n\t// \t\tconst response = await axios.get(`${SERVER_URL}/api/card/all`);\n\t// \t\tsetCardList(response.data);\n\t// \t} catch (err){\n\t// \t\tconsole.log(err);\n\t// \t}\n\t// }\n\n\tconst fetchUserData = async () => {\n\t\tconsole.log('fetch user data');\n\t\tsetIsEnter(false);\n\t\t// try {\n\t\t// \tconst response = await axios.get();\n\t\t// \tif (response.isEnter === false)\n\t\t// \t{\n\t\t// \t\tsetIsEnter(true);\n\t\t// \t\tfetchCardData();\n\t\t// \t}\n\t\t// \telse\n\t\t// \t\tsetIsEnter(false);\n\t\t// } catch(err) {\n\t\t// \tconsole.log(err);\n\t\t// }\n\t}\n\n\t// api/card/valid/{cardid} -> valid check // using: false (사용할 수 있으면), true\n\t// card invalid -> 메세지 추가, input 초기화\n\n\tconst handleCheckIn = async () => {\n\t\tif (readySubmit)\n\t\t{\n\t\t\tconsole.log(\"checkin\");\n\t\t\ttry {\n\t\t\t\tconst response = await axios.post(`${SERVER_URL}/api/user/checkIn/${cardNum}`);\n\t\t\t\t// {\n\t\t\t\t\t// userId: userId,\n\t\t\t\t\t// isEnter: isEnter,\n\t\t\t\t\t// checkStatus: checkStatus,\n\t\t\t\t// \tcardNum: cardNum\n\t\t\t\t// });\n\t\t\t\t//완료 메세지 추가\n\t\t\t\tconsole.log(response);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleCheckOut = async() => {\n\t\tif (readySubmit)\n\t\t{\n\t\t\tconsole.log(\"checkout\");\n\t\t\ttry {\n\t\t\t\tconst response = await axios.post(`${SERVER_URL}/api/user/checkOut`);\n\t\t\t\t//완료 메세지 추가\n\n\t\t\t\tconsole.log(response);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleCheckAll = (e) => {\n\t\tconst isChecked = e.target.checked;\n\t\tsetCheckAll(isChecked);\n\t\tsetCheckStatus([isChecked, isChecked, isChecked]);\n\t};\n\n\tconst handlePickCard = (e) => {\n\t\tsetCardNum(e.target.value);\n\t}\n\n\tuseEffect (() => {\n\t\tconsole.log('effect');\n\t\tif (userId === '')\n\t\t\tsetUserId(window.location.href.split('/').reverse()[0]);\n\t\t// \tfetchUserData();\n\t\tif (isEnter === false && cardNum !== '' && JSON.stringify(checkStatus) === JSON.stringify([true, true, true]))\n\t\t\tsetReadySubmit(true);\n\t\tif (cardNum === '' || cardNum === '---' || JSON.stringify(checkStatus) !== JSON.stringify([true, true, true]))\n\t\t\tsetReadySubmit(false);\n\t}, [userId, cardNum, checkStatus, isEnter, readySubmit]);\n\n\treturn (\n\t\t<>\n\t\t<div id=\"checkinout\">\n\t\t\t<h1 id=\"title\">{isEnter ? '42 CheckOut' : '42 CheckIn'}</h1>\n\t\t\t<h3 id=\"userId\">Intra ID: {userId}</h3>\n\t\t\t{isEnter ?\n\t\t\t\t<div className=\"submitBtn ready\" onClick={handleCheckOut}>Check Out</div>\n\t\t\t\t:\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"input-wrapper\">\n\t\t\t\t\t\t{/* <h3>Check List</h3> */}\n\t\t\t\t\t\t<input type=\"checkbox\" checked={checkAll} onChange={handleCheckAll} />모두 동의\n\t\t\t\t\t\t<div className=\"checkbox-wrapper\">\n\t\t\t\t\t\t\t{checkLists.map((checkList, id) =>\n\t\t\t\t\t\t\t<Checkbox key={id} name={id} text={checkList} checkStatus={checkStatus} setCheckStatus={setCheckStatus}/>)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"input-wrapper\">\n\t\t\t\t\t\t<h3>Card Number</h3>\n\t\t\t\t\t\t<input id=\"card\" type=\"text\" name=\"text\" value={cardNum} onChange={handlePickCard}></input>\n\t\t\t\t\t\t{/* <select onChange={handlePickCard}>\n\t\t\t\t\t\t\t<option>---</option>\n\t\t\t\t\t\t\t{cardList.map((num) => <option key={num} value={num}>{num}</option>)}\n\t\t\t\t\t\t</select> */}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={`submitBtn ${readySubmit ? ' ready': ''}`} onClick={handleCheckIn}>Check In</div>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t\t</>\n\t)\n};\nexport default CheckInPage;\n","import { BrowserRouter, Route } from 'react-router-dom';\nimport LandingPage from './components/LandingPage';\nimport SubmitPage from './components/SubmitPage';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route path=\"/\" exact={true} component={LandingPage} />\n      <Route path=\"/submit\" component={SubmitPage}/>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}